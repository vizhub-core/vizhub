import { FileId } from 'vzcode';

// Checks if a string was generated by `generateId` from interactors.
export const isId = (str: string): boolean => {
  // First check if the length is exactly 32 characters
  if (str.length !== 32) {
    return false;
  }

  // Regular expression for a 32-character hexadecimal string
  let uuidV4NoDashRegex = /^[0-9a-f]{32}$/i;

  // Check if the string matches the regular expression
  if (!uuidV4NoDashRegex.test(str)) {
    return false;
  }

  // Check if the 13th character is '4' (indicating UUID v4)
  // and the 17th character is one of '8', '9', 'a', 'b' (indicating the variant)
  return (
    str[12] === '4'
    // &&
    // ['8', '9', 'a', 'b'].includes(str[16].toLowerCase())
  );
};

// Generates a UUID v4 string without dashes,
// without any dependencies on Node packages.
// For use in the browser for generating entity ids.
// See also interactors/generateId for the server-side version.

// Code by ChatGPT, Feb 2024
export const generateId = (): string =>
  'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, (c) =>
    (
      (c === 'x'
        ? Math.random() * 16
        : (Math.random() * 4) | 8) | 0
    ).toString(16),
  );

// Generates a file id
export const generateFileId = (): FileId =>
  generateId().substring(0, 8);
