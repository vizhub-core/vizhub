import { CommitId, EntityName, VizId } from 'entities';

// A VizHub-specific error code.
export enum VizHubErrorCode {
  // When a resource is not found.
  // e.g. an invalid id was used, or a viz was deleted
  resourceNotFound = 'resourceNotFound',
  invalidCommitOp = 'invalidCommitOp',
  invalidDecrement = 'invalidDecrement',
  missingParameter = 'missingParameter',
  missingAuth = 'missingAuth',
  invariantViolation = 'invariantViolation',
  accessDenied = 'accessDenied',
}

// Errors generated by gateway methods be of this type.
export class VizHubError extends Error {
  code: VizHubErrorCode;
  constructor(message: string, code: VizHubErrorCode) {
    super(message);
    this.name = 'VizHubError';
    this.code = code;
  }
}

export const resourceNotFoundError = (
  id: string,
  entityName: EntityName,
): VizHubError =>
  new VizHubError(
    `Resource (${entityName}) not found with id: ${id}`,
    VizHubErrorCode.resourceNotFound,
  );

export const invalidCommitOp = (
  commitId: CommitId,
  message: string,
): VizHubError =>
  new VizHubError(
    'Invalid op in commit with id: ' +
      commitId +
      '\n' +
      message,
    VizHubErrorCode.invalidCommitOp,
  );

export const invalidDecrementError = (
  id: VizId,
  field: string,
): VizHubError =>
  new VizHubError(
    'Cannot decrement zero-value field `' +
      field +
      '` on viz `' +
      id +
      '`',
    VizHubErrorCode.invalidCommitOp,
  );

export const missingParameterError = (
  parameter: string,
): VizHubError =>
  new VizHubError(
    'Missing parameter: ' + parameter,
    VizHubErrorCode.missingParameter,
  );

export const authenticationRequiredError =
  (): VizHubError =>
    new VizHubError(
      'Authentication required',
      VizHubErrorCode.missingAuth,
    );

export const invariantViolationError = (
  message: string,
): VizHubError =>
  new VizHubError(
    'Invariant violation: ' + message,
    VizHubErrorCode.invariantViolation,
  );

// Access denied
// e.g. user does not have permission to read/write a viz
export const accessDeniedError = (
  message: string,
): VizHubError =>
  new VizHubError(
    'Access denied: ' + message,
    VizHubErrorCode.accessDenied,
  );
